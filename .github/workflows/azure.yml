name: Azure
on:
  push:
    branches:
      - master

env:
  AZURE_WEBAPP_NAME: blazorbin
  AZURE_WEBAPP_PACKAGE_PATH: './Otomatik.BlazorBin/bin/Release/netcoreapp3.1'
  AZURE_WEBAPP_DIR: './Otomatik.BlazorBin'
  AZURE_FUNCTIONAPP_NAME: bbf
  AZURE_FUNCTIONAPP_DIR: './Otomatik.BlazorBin.Function'

jobs:
  func-build-and-deploy:
    name: Function Build and Deploy
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@master
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.101'
    - name: Build
      shell: pwsh
      run: |
        pushd ${{ env.AZURE_FUNCTIONAPP_DIR }}
        dotnet build --configuration Release --output ./output
        popd
    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        # If your function app project is not located in your repository's root
        # Please consider prefixing the project path in this package parameter
        package: '${{ env.AZURE_FUNCTIONAPP_DIR }}/output'
        # If you want to use publish profile credentials instead of Azure Service Principal
        # Please uncomment the following line
        publish-profile: ${{ secrets.SCM_CREDENTIALS }}

    #- name: 'use the published functionapp url in upcoming steps'
    #  run: |
    #    echo "${{ steps.fa.outputs.app-url }}"
  app-build-and-deploy:
    name: Blazor App Build and Deploy
    needs: [func-build-and-deploy]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
    - name: Build
      working-directory: ${{ env.AZURE_WEBAPP_DIR }}
      run: dotnet build --configuration Release --self-contained true
    - name: 'Deploy to Azure WebApp'
      uses: azure/webapps-deploy@v1
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
