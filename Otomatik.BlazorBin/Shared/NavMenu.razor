@using Microsoft.AspNetCore.Mvc.ModelBinding
@using Otomatik.BlazorBin.Models
<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">BlazorBin</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        @if (Requests == null || Requests.Count() == 0)
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="">
                    <div class="spinner-grow" role="status">
                        <span class="sr-only">Loading...</span>
                    </div> Waiting for a request...
                </NavLink>
            </li>
        }
        else
        {
            for (var i = 0; i < Requests.Count(); i++)
            {
                Request request = Requests[i];
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="@(GroupName + "#" + i)" @onclick="async () => { await SelectRequest(request); }">
                        <span class="oi @(request.IsOpened ? "oi-envelope-open" : "oi-envelope-closed") " aria-hidden="true"></span> @request.Method
                    </NavLink>
                </li>
            }
        }
    </ul>
</div>

@code {
    [Parameter]
    public List<Request> Requests { get; set; }

    [Parameter]
    public Request SelectedMessage { get; set; }

    [Parameter]
    public string GroupName { get; set; }

    [Parameter]
    public EventCallback<Request> OnClick { get; set; }

    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    async Task SelectRequest(Request request)
    {
        request.IsOpened = true;

        SelectedMessage = request;

        await OnClick.InvokeAsync(request);
    }
}
